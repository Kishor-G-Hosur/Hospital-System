{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenono-PC\\\\Desktop\\\\React\\\\miniApp\\\\src\\\\user.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport '../src/user.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  let [userData, setData] = useState([]);\n  useEffect(() => {\n    try {\n      let fetchData = async () => {\n        let response = await fetch(\"https://api.github.com/users\");\n        let data = await response.json();\n        setData(data);\n      };\n      fetchData();\n    } catch {\n      console.log(\"failed to fetch,network issue\");\n    }\n  }, []);\n  let Remove = id => {\n    setData(userData.filter(x => x.id !== id));\n    alert(`${id}has been removed `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Github users page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"user pages;\", userData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), userData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"150\",\n        src: data.avatar_url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Name:\", data.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Remove(data.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"EsmKWRif+K0HAJhB+/xNTLDFFFA=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useState","useEffect","Users","userData","setData","fetchData","response","fetch","data","json","console","log","Remove","id","filter","x","alert","length","map","avatar_url","login"],"sources":["C:/Users/Lenono-PC/Desktop/React/miniApp/src/user.jsx"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport '../src/user.css'\r\nconst Users = () => {\r\n    let [userData,setData]=useState([])\r\n    useEffect(()=>{\r\n        try{\r\n            let fetchData = async () => {\r\n                let response = await fetch(\"https://api.github.com/users\");\r\n                let data = await response.json();\r\n                setData(data);\r\n              };\r\n              fetchData();\r\n        }\r\n        catch{\r\n            console.log(\"failed to fetch,network issue\");\r\n        }\r\n    },[])\r\n    let Remove=(id)=>{\r\n        setData(userData.filter(x=>x.id!==id))\r\n        alert(`${id}has been removed `)\r\n      }\r\n    return ( \r\n        <div className=\"users\">\r\n            <div className=\"Main\">\r\n            <h1>Github users page</h1>\r\n            \r\n            <p>user pages;{userData.length}</p>\r\n            </div>\r\n            { userData.map((data)=>(\r\n               \r\n                <div className=\"userList\">\r\n                <img width=\"150\" src={data.avatar_url} alt=\"\" /> \r\n\r\n                   <h1>Name:{data.login}</h1>\r\n                   <button onClick={()=>Remove(data.id)}>Remove</button>\r\n                </div>\r\n                \r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Users;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAO,iBAAiB;AAAA;AACxB,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,IAAI,CAACC,QAAQ,EAACC,OAAO,CAAC,GAACJ,QAAQ,CAAC,EAAE,CAAC;EACnCC,SAAS,CAAC,MAAI;IACV,IAAG;MACC,IAAII,SAAS,GAAG,YAAY;QACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAC1D,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAChCL,OAAO,CAACI,IAAI,CAAC;MACf,CAAC;MACDH,SAAS,EAAE;IACjB,CAAC,CACD,MAAK;MACDK,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAChD;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,IAAIC,MAAM,GAAEC,EAAE,IAAG;IACbT,OAAO,CAACD,QAAQ,CAACW,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACF,EAAE,KAAGA,EAAE,CAAC,CAAC;IACtCG,KAAK,CAAE,GAAEH,EAAG,mBAAkB,CAAC;EACjC,CAAC;EACH,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAE1B;QAAA,0BAAeV,QAAQ,CAACc,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,EACJd,QAAQ,CAACe,GAAG,CAAEV,IAAI,iBAEhB;MAAK,SAAS,EAAC,UAAU;MAAA,wBACzB;QAAK,KAAK,EAAC,KAAK;QAAC,GAAG,EAAEA,IAAI,CAACW,UAAW;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAE7C;QAAA,oBAAUX,IAAI,CAACY,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC1B;QAAQ,OAAO,EAAE,MAAIR,MAAM,CAACJ,IAAI,CAACK,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAG3D,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAtCKX,KAAK;AAAA,KAALA,KAAK;AAwCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}